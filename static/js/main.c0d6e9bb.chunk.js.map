{"version":3,"sources":["logo.svg","images/head2.png","images sync /^/.//example.*/.png$","images/example1.png","images/example10.png","images/example11.png","images/example13.png","images/example14.png","images/example17.png","images/example18.png","images/example19.png","images/example20.png","images/example21.png","images/example22.png","images/example23.png","images/example24.png","images/example33.png","images/example34.png","images/example35.png","images/example6.png","images/example7.png","images/example8.png","images/example9.png","serviceWorker.js","Home.js","Card.js","Guess.js","CardArea.js","GuessMode.js","MyCardList.js","ReviewMode.js","ChoiceMode.js","Play.js","CardForm.js","MyCards.js","Stats.js","Links.js","Main.js","Navigation.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./example1.png","./example10.png","./example11.png","./example13.png","./example14.png","./example17.png","./example18.png","./example19.png","./example20.png","./example21.png","./example22.png","./example23.png","./example24.png","./example33.png","./example34.png","./example35.png","./example6.png","./example7.png","./example8.png","./example9.png","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","Boolean","window","location","hostname","match","Home","props","react_default","a","createElement","Fragment","className","react_router_dom","to","src","head","alt","Card","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleExample","setState","showExample","state","deleteCard","cardData","deleteMyCard","example","substring","url","require","concat","popup","onClick","term","hasTerm","deleteBtn","canDelete","definition","Component","Guess","checkAnswer","value","target","type","closest","querySelector","answer","isSimilarEnough","showResponse","removeCard","getNextTurn","setTimeout","getRandomCard","textInput","document","console","log","updateGuessCount","compareTwoStrings","toLowerCase","text","icon","response","errorTxt","errorIconClass","classList","remove","add","onGuessKeyPress","key","choices","guessLayout","iconClass","mode","htmlFor","autoComplete","onKeyPress","CardArea","getCards","appCards","data","myCards","combo","ids","card","remaining","JSON","parse","localStorage","getItem","cards","remainingCardIds","randomId","Math","floor","random","length","randomCard","find","fakeAnswers","updatedIds","toConsumableArray","splice","indexOf","endGame","updateRemainingCardIds","setItem","stringify","resetGame","updateGameCount","checkHighScore","showDialog","closeDialog","shuffle","array","temporaryValue","randomIndex","currentIndex","guess","totalCards","cardsLeft","percent","style","animationDelay","src_Guess_0","dialog","onBlur","src_Card_0","GuessMode","src_CardArea_0","markCardUsed","MyCardList","list","ReviewMode","src_MyCardList","ChoiceMode","Play","_this2","react_router","path","exact","render","src_GuessMode","src_ChoiceMode","src_ReviewMode","validType","file","test","name","CardForm","saveCard","desc","imageUrl","saveNewCard","querySelectorAll","forEach","i","onFileChange","reader","FileReader","files","readAsDataURL","onload","getImageUrl","result","maxLength","onChange","cancelForm","MyCards","toggleForm","update","showForm","form","src_CardForm_0","Stats","gameCount","highScore","guesses","Links","href","Main","total","totalGuesses","numCards","numGuesses","highDiff","newScore","newCard","Date","now","new","updatedCards","unshift","updateMyCards","updateStorageRemainingCards","cardId","deletedCard","option","push","includes","index","src_Home","src_Play_0","src_MyCards_0","src_Stats","src_Links","Navigation","App","toggleNav","toggle","loading","fetch","then","json","reactTerms","catch","error","logo","src_Navigation","src_Main_0","ReactDOM","basename","process","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6GAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gOCAxC,IAAAC,EAAA,CACAC,iBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,iBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAxB,EAAAyB,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAvB,EAAAsB,GACA,KAAAC,EAAA,IACA,IAAAE,EAAA,IAAAC,MAAA,uBAAAJ,EAAA,KAEA,MADAG,EAAAE,KAAA,mBACAF,EAEA,OAAAF,EAEAF,EAAAO,KAAA,WACA,OAAAC,OAAAD,KAAA5B,IAEAqB,EAAAS,QAAAN,EACA5B,EAAAC,QAAAwB,EACAA,EAAAE,GAAA,oBC1CA3B,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8OCYpBgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,yLC8BSC,MA1Cf,SAAeC,GACX,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,kHAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,YAAYE,GAAG,SAChCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,gBACAJ,EAAAC,EAAAC,cAAA,iHAGJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,YAAYE,GAAG,YAChCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,8BACAJ,EAAAC,EAAAC,cAAA,yGAGJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,YAAYE,GAAG,UAChCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,oBACAJ,EAAAC,EAAAC,cAAA,0FAGJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,YAAYE,GAAG,UAChCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,gCACAJ,EAAAC,EAAAC,cAAA,6GAINF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaG,IAAKC,IAAMC,IAAI,wBCuBxCC,uCA5Db,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAAH,IACjBC,EAAApB,OAAAuB,EAAA,EAAAvB,CAAAsB,KAAAtB,OAAAwB,EAAA,EAAAxB,CAAAmB,GAAAM,KAAAH,KAAMd,KAORkB,cAAgB,WACdN,EAAKO,SAAS,CAACC,aAAcR,EAAKS,MAAMD,eATvBR,EAYnBU,WAAa,WACX,IAAMpC,EAAK0B,EAAKZ,MAAMuB,SAASrC,GAC/B0B,EAAKZ,MAAMwB,aAAatC,IAXxB0B,EAAKS,MAAQ,CACXD,aAAa,GAJER,wEAkBjB,IACIa,EADEC,EAAYZ,KAAKd,MAAMuB,SAASE,QAAUX,KAAKd,MAAMuB,SAASE,QAAQC,UAAU,EAAE,GAAK,KAG7F,GAAKZ,KAAKd,MAAMuB,SAASE,QAElB,GAAkB,QAAdC,EAAsB,CAC/B,IAAMC,EAAMC,MAAQ,YAAAC,OAAmBf,KAAKd,MAAMuB,SAASrC,GAAxC,SACnBuC,EAAUxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcG,IAAKmB,EAAKjB,IAAI,wBAErDe,EADuB,QAAdC,EACCzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcG,IAAKM,KAAKd,MAAMuB,SAASE,QAASf,IAAI,mBAEnET,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAIW,KAAKd,MAAMuB,SAASE,eAPvCA,EAAUxB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sCAUjB,IAAI2B,EAAQhB,KAAKO,MAAMD,aAAenB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAChDoB,EACDxB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,+BAA+B0B,QAASjB,KAAKI,eAA1D,WAGAc,EAAOlB,KAAKd,MAAMiC,QAAUnB,KAAKd,MAAMuB,SAASS,KAAO,aAErDE,EAAYpB,KAAKd,MAAMmC,WAAalC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAc0B,QAASjB,KAAKQ,aAEnF,OACErB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACC0B,EACC7B,EAAAC,EAAAC,cAAA,WAASE,UAAU,QAChB6B,EACDjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAe2B,IAE/B/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBAAd,iBACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeS,KAAKd,MAAMuB,SAASa,YAChDnC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAe0B,QAASjB,KAAKI,eAA1C,4BArDOmB,cC6FJC,qBA5Fb,SAAAA,EAAYtC,GAAO,IAAAY,EAAA,OAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAAwB,IACjB1B,EAAApB,OAAAuB,EAAA,EAAAvB,CAAAsB,KAAAtB,OAAAwB,EAAA,EAAAxB,CAAA8C,GAAArB,KAAAH,KAAMd,KASRuC,YAAc,SAACnD,GACb,IAAIoD,EAA0B,WAAlBpD,EAAEqD,OAAOC,KAAoBtD,EAAEqD,OAAOvD,GAChDE,EAAEqD,OAAOE,QAAQ,gBAAgBC,cAAc,SAASJ,OAE1B,WAAlBpD,EAAEqD,OAAOC,KAAoBF,IAAU5B,EAAKZ,MAAM6C,OAC9DjC,EAAKkC,gBAAgBN,KAGrB5B,EAAKmC,aAAa,6BAA8B,YAChDnC,EAAKZ,MAAMgD,cAEXpC,EAAKmC,aAAa,8CAAgD,YAEpEnC,EAAKqC,YAAY7D,EAAEqD,SAvBF7B,EA0BnBqC,YAAc,WACZC,WAAW,WACTtC,EAAKZ,MAAMmD,gBACX,IAAMC,EAAYC,SAAST,cAAc,eACzCU,QAAQC,IAAIH,GACRA,IAAWA,EAAUZ,MAAQ,IACjC5B,EAAKZ,MAAMwD,iBAAiB,QAC3B,MAjCc5C,EAoCnBkC,gBAAkB,SAACN,GAGjB,OAFcZ,EAAQ,IACG6B,kBAAkBjB,EAAMkB,cAAe9C,EAAKZ,MAAM6C,OAAOa,gBAC7D,KAvCJ9C,EA0CnBmC,aAAe,SAACY,EAAMC,GACpB,IAAMC,EAAWR,SAAST,cAAc,mBACxChC,EAAKO,SAAS,CAAC2C,SAAUH,EAAMI,eAAgBH,GAAO,WACpDC,EAASG,UAAUC,OAAO,aAC1Bf,WAAW,kBAAMW,EAASG,UAAUE,IAAI,cAAc,QA9CvCtD,EAkDnBuD,gBAAkB,SAAC/E,GACH,UAAVA,EAAEgF,KACJxD,EAAK2B,YAAYnD,IAjDnBwB,EAAKS,MAAQ,CACXyC,SAAU,GACVC,eAAgB,GAChBM,QAAS,IANMzD,wEAyDjB,IACI0D,EADAC,EAAS,OAAA1C,OAAUf,KAAKO,MAAM0C,gBA2BlC,OAzBAT,QAAQC,IAAIzC,KAAKd,MAAMqE,SACvBf,QAAQC,IAAIzC,KAAKd,MAAM6C,QAEOyB,EAAV,UAApBxD,KAAKd,MAAMwE,KACTvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAAEH,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,cAAf,qBACAxE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,SAAOjB,GAAG,aAAamB,UAAU,qBAAqBqE,aAAa,MAAMC,WAAY7D,KAAKqD,kBAC1FlE,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,SAASrC,UAAU,mBAAmB0B,QAASjB,KAAKyB,aAAatC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,yBAE7FJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yCACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAWkE,IAAetE,EAAAC,EAAAC,cAAA,SAAIW,KAAKO,MAAMyC,YAIhD7D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAAEH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,SAASrC,UAAU,SAASnB,GAAI4B,KAAKd,MAAMqE,QAAQ,GAAItC,QAASjB,KAAKyB,aAAczB,KAAKd,MAAMqE,QAAQ,IACnHpE,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,SAASrC,UAAU,SAASnB,GAAI4B,KAAKd,MAAMqE,QAAQ,GAAItC,QAASjB,KAAKyB,aAAczB,KAAKd,MAAMqE,QAAQ,IACnHpE,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,SAASrC,UAAU,SAASnB,GAAI4B,KAAKd,MAAMqE,QAAQ,GAAItC,QAASjB,KAAKyB,aAAczB,KAAKd,MAAM6C,SAE7G5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yCACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAWkE,IAAetE,EAAAC,EAAAC,cAAA,SAAIW,KAAKO,MAAMyC,YAKhD7D,EAAAC,EAAAC,cAAA,WAASE,UAAU,cAChBiE,UAvFWjC,cCoILuC,cAhIb,SAAAA,EAAY5E,GAAO,IAAAY,EAAA,OAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAA8D,IACjBhE,EAAApB,OAAAuB,EAAA,EAAAvB,CAAAsB,KAAAtB,OAAAwB,EAAA,EAAAxB,CAAAoF,GAAA3D,KAAAH,KAAMd,KAgBR6E,SAAW,WACT,IAAMC,EAAWlE,EAAKZ,MAAM+E,KACtBC,EAAUpE,EAAKZ,MAAMgF,SAAW,GAChCC,EAAQH,EAASjD,OAAOmD,GACxBE,EAAMD,EAAMtH,IAAI,SAAAwH,GAAI,OAAIA,EAAKjG,KAC7BkG,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,qBAC/CN,EACHtE,EAAKO,SAAS,CAACsE,MAAOR,EAAOS,iBAAkBN,GAAY,WACzDxE,EAAKuC,mBAzBUvC,EA6BnBuC,cAAgB,WACd,IAAMwC,EAAW/E,EAAKS,MAAMqE,iBAAiBE,KAAKC,MAAMD,KAAKE,SAAWlF,EAAKS,MAAMqE,iBAAiBK,SAC9FC,EAAapF,EAAKS,MAAMoE,MAAMQ,KAAK,SAAAd,GAAI,OAAIA,EAAKjG,KAAOyG,IAC7DrC,QAAQC,IAAIyC,GACZpF,EAAKO,SAAS,CAAC6E,WAAYA,EAAY3B,QAAS2B,EAAWE,YAAYrE,OAAOmE,EAAWhE,SAjCxEpB,EAoCnBoC,WAAa,WACX,IAAImD,EAAU3G,OAAA4G,EAAA,EAAA5G,CAAOoB,EAAKS,MAAMqE,kBAChCS,EAAWE,OAAOF,EAAWG,QAAQ1F,EAAKS,MAAM2E,WAAW9G,IAAK,GAC3DiH,EAAWJ,QACd7C,WAAW,kBAAMtC,EAAK2F,WAAW,KAEnC3F,EAAK4F,uBAAuBL,IA1CXvF,EA6CnB4F,uBAAyB,SAACtB,GACxBtE,EAAKO,SAAS,CAACuE,iBAAkBR,IACjCK,aAAakB,QAAQ,kBAAmBpB,KAAKqB,UAAUxB,KA/CtCtE,EAkDnB+F,UAAY,WACV/F,EAAK4F,uBAAuB5F,EAAKS,MAAMoE,MAAM9H,IAAI,SAAAwH,GAAI,OAAIA,EAAKjG,MAC9D0B,EAAKZ,MAAMwD,iBAAiB,GAC5B5C,EAAKiE,YArDYjE,EAwDnB2F,QAAU,WACR3F,EAAKZ,MAAM4G,kBACXhG,EAAKZ,MAAM6G,eAAejG,EAAKS,MAAMoE,MAAMM,QAC3CnF,EAAKO,SAAS,CAAC2F,YAAY,IAC3BlG,EAAK+F,aA5DY/F,EA+DnBmG,YAAc,WACZnG,EAAKO,SAAS,CAAC2F,YAAY,KAhEVlG,EAmEnBoG,QAAU,SAAAC,GAER,IADA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMlB,OAClB,IAAMqB,GACXD,EAAcvB,KAAKC,MAAMD,KAAKE,SAAWsB,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,GAzEPrG,EAAKS,MAAQ,CACXoE,MAAO,GACPC,iBAAkB,GAClBM,WAAY,GACZ3B,QAAS,CAAC,MAAO,MAAO,SACxBpC,QAA6B,UAApBrB,EAAKZ,MAAMwE,MAAwC,WAApB5D,EAAKZ,MAAMwE,KACnDsC,YAAY,GATGlG,mFAcjBE,KAAK+D,4CAkELvB,QAAQC,IAAIzC,KAAKO,MAAMqE,kBACvB,IAEI2B,EAFEC,EAAaxG,KAAKO,MAAMoE,MAAMM,OAC9BwB,EAAYzG,KAAKO,MAAMqE,iBAAiBK,OAE1CyB,GAAWF,EAAaC,GAAaD,EAAa,IACtC,MAAZE,IACFA,EAAU,OAEZ,IAAMC,EAAQ,CAACC,eAAc,IAAA7F,OAAM2F,EAAN,MAE3BH,EACCpH,EAAAC,EAAAC,cAACwH,EAAD,CAAOnD,KAAM1D,KAAKd,MAAMwE,KAClB3B,OAAQ/B,KAAKO,MAAM2E,WAAWhE,KAC9BqC,QAASvD,KAAKO,MAAMgD,QACpBlB,cAAerC,KAAKqC,cACpBH,WAAYlC,KAAKkC,WACjBQ,iBAAkB1C,KAAKd,MAAMwD,mBAGtC,IAAMoE,EAAS9G,KAAKO,MAAMyF,YACxB7G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBwH,OAAQ/G,KAAKiG,aAC7C9G,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,yHACAF,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,SAASX,QAASjB,KAAKiG,aAApC,QAIE5B,EAAOrE,KAAKO,MAAM2E,YACtB/F,EAAAC,EAAAC,cAAC2H,EAAD,CAAM7F,QAASnB,KAAKO,MAAMY,QACpBE,WAAW,EACXZ,SAAUT,KAAKO,MAAM2E,aAG/B,OACE/F,EAAAC,EAAAC,cAAA,WAASE,UAAU,aAChBuH,EACAzC,EACAkC,EACDpH,EAAAC,EAAAC,cAAA,WAASE,UAAU,iBACjBJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,YAAOmH,EAAaC,GAAvB,OAA4CtH,EAAAC,EAAAC,cAAA,YAAOmH,IACnDrH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBoH,MAAOA,aA1H1BpF,aCiBR0F,MAnBf,SAAmB/H,GACf,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,sIAEFF,EAAAC,EAAAC,cAAC6H,EAAD,CAAUxD,KAAK,QACLO,KAAM/E,EAAM+E,KACZC,QAAShF,EAAMgF,QACfiD,aAAcjI,EAAMiI,aACpBrB,gBAAiB5G,EAAM4G,gBACvBpD,iBAAkBxD,EAAMwD,iBACxBqD,eAAgB7G,EAAM6G,yBCQzBqB,MArBf,SAAoBlI,GAClB,IAAImI,EAIF,OAHqBA,EAAR,QAAfnI,EAAMwE,KAAwBxE,EAAM+E,KAAKlD,OAAO7B,EAAMgF,SAC7ChF,EAAMgF,QAGX/E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEI+H,EAAKxK,IAAI,SAAAwH,GACP,OAAOlF,EAAAC,EAAAC,cAAC2H,EAAD,CAAM1D,IAAKe,EAAKjG,GACV+C,SAAS,EACTE,UAAWnC,EAAMmC,UACjBZ,SAAU4D,EACV3D,aAAcxB,EAAMwB,mBCK9B4G,MAlBf,SAAoBpI,GAChB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,wLAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAACkI,EAAD,CAAY7D,KAAK,MACLO,KAAM/E,EAAM+E,KACZC,QAAShF,EAAMgF,QACf7C,WAAW,OCMlBmG,MAlBf,SAAoBtI,GAChB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,2JAEFF,EAAAC,EAAAC,cAAC6H,EAAD,CAAUxD,KAAK,SACLO,KAAM/E,EAAM+E,KACZkD,aAAcjI,EAAMiI,aACpBrB,gBAAiB5G,EAAM4G,gBACvBpD,iBAAkBxD,EAAMwD,iBACxBqD,eAAgB7G,EAAM6G,mBCyDzB0B,cAhEb,SAAAA,EAAYvI,GAAO,IAAAY,EAAA,OAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAAyH,IACjB3H,EAAApB,OAAAuB,EAAA,EAAAvB,CAAAsB,KAAAtB,OAAAwB,EAAA,EAAAxB,CAAA+I,GAAAtH,KAAAH,KAAMd,KAEDqB,MAAQ,GAHIT,wEAOV,IAAA4H,EAAA1H,KACP,OACEb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,KACExI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,OAAQ,SAAC5I,GAAD,OAChCC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAb,sGACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,YAAYE,GAAG,eAChCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,cACAJ,EAAAC,EAAAC,cAAA,uJAGJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,YAAYE,GAAG,gBAChCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,eACAJ,EAAAC,EAAAC,cAAA,uLAGJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,YAAYE,GAAG,gBAChCN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,eACAJ,EAAAC,EAAAC,cAAA,iKAKNF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,cAAcC,OAAK,EAACC,OAAQ,SAAC5I,GAAD,OAAYC,EAAAC,EAAAC,cAAC0I,EAAD,CAC5C9D,KAAMyD,EAAKxI,MAAM+E,KACjBC,QAASwD,EAAKxI,MAAMgF,QACpB4B,gBAAiB4B,EAAKxI,MAAM4G,gBAC5BqB,aAAcO,EAAKxI,MAAMiI,aACzBpB,eAAgB2B,EAAKxI,MAAM6G,eAC3BrD,iBAAkBgF,EAAKxI,MAAMwD,sBAGrCvD,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACC,OAAQ,SAAC5I,GAAD,OAAYC,EAAAC,EAAAC,cAAC2I,EAAD,CAC7C/D,KAAMyD,EAAKxI,MAAM+E,KACjBC,QAASwD,EAAKxI,MAAMgF,QACpB4B,gBAAiB4B,EAAKxI,MAAM4G,gBAC5BqB,aAAcO,EAAKxI,MAAMiI,aACzBpB,eAAgB2B,EAAKxI,MAAM6G,eAC3BrD,iBAAkBgF,EAAKxI,MAAMwD,sBAGrCvD,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,eAAeE,OAAQ,SAAC5I,GAAD,OACnCC,EAAAC,EAAAC,cAAC4I,EAAD,CAAYhE,KAAMyD,EAAKxI,MAAM+E,KACjBC,QAASwD,EAAKxI,MAAMgF,sBAxDzB3C,aCJb2G,eAAY,SAAAC,GAAI,MAAK,sBAAsBC,KAAKD,EAAKE,QAqD5CC,cAlDb,SAAAA,EAAYpJ,GAAO,IAAAY,EAAA,OAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAAsI,IACjBxI,EAAApB,OAAAuB,EAAA,EAAAvB,CAAAsB,KAAAtB,OAAAwB,EAAA,EAAAxB,CAAA4J,GAAAnI,KAAAH,KAAMd,KAORqJ,SAAW,SAACjK,GACV,IAAM4C,EAAOqB,SAAST,cAAc,kBAAkBJ,MAChD8G,EAAOjG,SAAST,cAAc,kBAAkBJ,MAEhDyG,EAAOrI,EAAKS,MAAMkI,SAExB3I,EAAKZ,MAAMwJ,YAAYxH,EAAMsH,EAAML,GACnC5F,SAASoG,iBAAiB,mBAAmBC,QAAQ,SAAAC,GAAC,OAAIA,EAAEnH,MAAQ,KACpE5B,EAAKO,SAAS,CAACoI,SAAU,MAhBR3I,EAmBnBgJ,aAAe,SAAAxK,GACb,IAAMyK,EAAS,IAAIC,WACf1K,EAAEqD,OAAOsH,MAAM,IAAMf,EAAU5J,EAAEqD,OAAOsH,MAAM,MAChDF,EAAOG,cAAc5K,EAAEqD,OAAOsH,MAAM,IACpCF,EAAOI,OAASrJ,EAAKsJ,cAvBNtJ,EA2BnBsJ,YAAc,SAAA9K,GACZ,IAAMuC,EAAMvC,EAAEqD,OAAO0H,OACrBvJ,EAAKO,SAAS,CAACoI,SAAU5H,KA1BzBf,EAAKS,MAAQ,CACXkI,SAAU,IAJK3I,wEAiCjB,OACEX,EAAAC,EAAAC,cAAA,QAAME,UAAU,iBACdJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,iBAAf,OAAmCxE,EAAAC,EAAAC,cAAA,iBAAnC,KACAF,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,OAAOrC,UAAU,iBAAiBnB,GAAG,gBAAgBkL,UAAU,OAC3EnK,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,iBAAf,cAA0CxE,EAAAC,EAAAC,cAAA,iBAA1C,KACAF,EAAAC,EAAAC,cAAA,YAAUE,UAAU,iBAAiBnB,GAAG,gBAAgBkL,UAAU,OAClEnK,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,iBAAf,YACAxE,EAAAC,EAAAC,cAAA,SAAOuC,KAAK,OAAOrC,UAAU,iBAAiBnB,GAAG,mBAAmBmL,SAAUvJ,KAAK8I,eACnF3J,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,SAASrC,UAAU,kBAAkB0B,QAASjB,KAAKd,MAAMsK,YAAtE,UACArK,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,SAASrC,UAAU,gBAAgB0B,QAASjB,KAAKuI,UAA9D,iBA5CahH,aC+CRkI,cA9Cb,SAAAA,EAAYvK,GAAO,IAAAY,EAAA,OAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAAyJ,IACjB3J,EAAApB,OAAAuB,EAAA,EAAAvB,CAAAsB,KAAAtB,OAAAwB,EAAA,EAAAxB,CAAA+K,GAAAtJ,KAAAH,KAAMd,KAORwK,WAAa,WACX,IAAMC,GAAU7J,EAAKS,MAAMqJ,SAC3B9J,EAAKO,SAAS,CAACuJ,SAAUD,KAVR7J,EAanB0J,WAAa,WACXjH,SAASoG,iBAAiB,mBAAmBC,QAAQ,SAAAC,GAAC,OAAIA,EAAEnH,MAAQ,KACpE5B,EAAKO,SAAS,CAACuJ,UAAU,KAZzB9J,EAAKS,MAAQ,CACXqJ,UAAU,GAJK9J,wEAmBjB,IAAM+J,EAAO7J,KAAKO,MAAMqJ,SACtBzK,EAAAC,EAAAC,cAACyK,EAAD,CAAUN,WAAYxJ,KAAKwJ,WAAYd,YAAa1I,KAAKd,MAAMwJ,cAC/D,KAEF,OACEvJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,qDACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,SAAb,mFAEFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,UAAQuC,KAAK,SAASxD,GAAG,eAAe6C,QAASjB,KAAK0J,YAAtD,mBAEFvK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZsK,EACD1K,EAAAC,EAAAC,cAACkI,EAAD,CAAYtD,KAAMjE,KAAKd,MAAM+E,KACjBC,QAASlE,KAAKd,MAAMgF,QACpB7C,WAAW,EACXX,aAAcV,KAAKd,MAAMwB,wBAvCzBa,mBCqBPwI,MAvBf,SAAe7K,GACb,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACfJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,wBACXJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,yBACAJ,EAAAC,EAAAC,cAAA,0CAAkCH,EAAM8K,UAAxC,aAGJ7K,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAClBJ,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAd,cACAJ,EAAAC,EAAAC,cAAA,yCAAiCH,EAAM+K,UAAUzD,WAAjD,mBAA6EtH,EAAM+K,UAAUC,QAA7F,uBCEKC,MAlBf,SAAejL,GACb,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBAAd,cACAJ,EAAAC,EAAAC,cAAA,iHACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAiB6K,KAAK,iDAAnC,iDACAjL,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBAAd,gBACAJ,EAAAC,EAAAC,cAAA,uFACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAiB6K,KAAK,iCAAnC,iCACAjL,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBAAd,uBACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAiB6K,KAAK,sCAAnC,sCACAjL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAiB6K,KAAK,iDAAnC,iDACAjL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAiB6K,KAAK,gDAAnC,kDCmHSC,cAzHb,SAAAA,EAAYnL,GAAO,IAAAY,EAAA,OAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAAqK,IACjBvK,EAAApB,OAAAuB,EAAA,EAAAvB,CAAAsB,KAAAtB,OAAAwB,EAAA,EAAAxB,CAAA2L,GAAAlK,KAAAH,KAAMd,KAwBR4G,gBAAkB,WAChB,IAAMkE,EAAYlK,EAAKS,MAAMyJ,UAAY,EACzClK,EAAKO,SAAS,CAAC2J,UAAWA,IAC1BvF,aAAakB,QAAQ,aAAcpB,KAAKqB,UAAUoE,KA5BjClK,EA+BnB4C,iBAAmB,SAAAiH,GACjB,IAAIW,EAAmB,QAAXX,EAAmB7J,EAAKS,MAAMgK,aAAe,EAAI,EAC7DzK,EAAKO,SAAS,CAACkK,aAAcD,IAC7B7F,aAAakB,QAAQ,cAAepB,KAAKqB,UAAU0E,KAlClCxK,EAqCnBiG,eAAiB,SAACyE,GAChB,IAAMC,EAAa3K,EAAKS,MAAMgK,aACxBG,EAAY5K,EAAKS,MAAM0J,UAAUC,QAAUpK,EAAKS,MAAM0J,UAAUzD,WAGtE,IAAKkE,GAFeD,EAAaD,EAEFE,EAAU,CACvC,IAAMC,EAAW,CAACnE,WAAYgE,EAAUN,QAASO,GACjD3K,EAAKO,SAAS,CAAC4J,UAAWU,GAAW,WACnClG,aAAakB,QAAQ,aAAcpB,KAAKqB,UAAU+E,QA7CrC7K,EAkDnB4I,YAAc,SAACxH,EAAMsH,EAAML,GACzB,IAAMyC,EAAU,CAACxM,GAAIyM,KAAKC,MAAO5J,KAAMA,EAAMI,WAAYkH,EAAM7H,QAASwH,EAAM4C,KAAK,GAC7EC,EAAelL,EAAKS,MAAM2D,QAChC8G,EAAaC,QAAQL,GACrB9K,EAAKoL,cAAcF,GACnBlL,EAAKqL,4BAA4BP,EAAQxM,GAAI,QAvD5B0B,EA0DnBY,aAAe,SAAA0K,GACb,IAAMJ,EAAelL,EAAKS,MAAM2D,QAC1BmH,EAAcL,EAAa7F,KAAK,SAAAd,GAAI,OAAIA,EAAKjG,KAAOgN,IAC1DJ,EAAazF,OAAOyF,EAAaxF,QAAQ6F,GAAc,GACvDvL,EAAKoL,cAAcF,GACnBlL,EAAKqL,4BAA4BE,EAAYjN,KA/D5B0B,EAkEnBoL,cAAgB,SAAAvG,GACd7E,EAAKO,SAAS,CAAC6D,QAASS,IACxBF,aAAakB,QAAQ,WAAYpB,KAAKqB,UAAUjB,KApE/B7E,EAuEnBqL,4BAA8B,SAAC/M,EAAIkN,GACjC,IAAIhH,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,qBAAuB,GACxD,QAAX4G,EACFhH,EAAUiH,KAAKnN,GACNkG,EAAUkH,SAASpN,IAC5BkG,EAAUiB,OAAOjB,EAAUkB,QAAQpH,GAAK,GAE1CqG,aAAakB,QAAQ,kBAAmBpB,KAAKqB,UAAUtB,KA9EtCxE,EAiFnBqH,aAAe,SAAAiE,GACb,IAAMJ,EAAYtM,OAAA4G,EAAA,EAAA5G,CAAOoB,EAAKS,MAAM2D,SAC9BuH,EAAQT,EAAaxF,QAAQwF,EAAa7F,KAAK,SAAAd,GAAI,OAAIA,EAAKjG,KAAOgN,KACzEJ,EAAaS,GAAOV,KAAM,EAC1BjL,EAAKoL,cAAcF,IAlFnBlL,EAAKS,MAAQ,CACX2D,QAAS,GACT8F,UAAW,EACXO,aAAc,EACdN,UAAW,CAACzD,WAAY,EAAG0D,QAAS,IAPrBpK,mFAYjB,IAAMoE,EAAUK,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAC1DsF,EAAYzF,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,EAC9DuF,EAAY1F,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,CAAC8B,WAAY,EAAG0D,QAAS,GACvFK,EAAehG,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,EAExE1E,KAAKK,SAAS,CACZ6D,QAASA,EACT8F,UAAWA,EACXC,UAAWA,EACXM,aAAcA,qCAmET,IAAA7C,EAAA1H,KACP,OACIb,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,KACExI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,SAAC5I,GAAD,OAAYC,EAAAC,EAAAC,cAACqM,EAAD,SAC1CvM,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,QAAQE,OAAQ,SAAC5I,GAAD,OAC1BC,EAAAC,EAAAC,cAACsM,EAAD,CAAM1H,KAAMyD,EAAKxI,MAAM+E,KACjBC,QAASwD,EAAKnH,MAAM2D,QACpB4B,gBAAiB4B,EAAK5B,gBACtBqB,aAAcO,EAAKP,aACnBpB,eAAgB2B,EAAK3B,eACrBrD,iBAAkBgF,EAAKhF,sBAG/BvD,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,WAAWE,OAAQ,SAAC5I,GAAD,OAC7BC,EAAAC,EAAAC,cAACuM,EAAD,CAAS3H,KAAMyD,EAAKxI,MAAM+E,KAClBC,QAASwD,EAAKnH,MAAM2D,QACpBwE,YAAahB,EAAKgB,YAClBhI,aAAcgH,EAAKhH,kBAG7BvB,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,SAASE,OAAQ,SAAC5I,GAAD,OAC3BC,EAAAC,EAAAC,cAACwM,EAAD,CAAO7B,UAAWtC,EAAKnH,MAAMyJ,UACvBC,UAAWvC,EAAKnH,MAAM0J,eAG9B9K,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,SAASE,OAAQ,SAAC5I,GAAD,OAAYC,EAAAC,EAAAC,cAACyM,EAAD,kBAnHpCvK,mBCOJwK,MAZf,SAAoB7M,GAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,WAAWsI,OAAO,EAAMpI,GAAG,KAAIN,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAA/D,QACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,SAAQN,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAtD,QACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,YAAWN,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAzD,YACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,UAASN,EAAAC,EAAAC,cAAA,KAAGE,UAAU,qBAAvD,SACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,WAAWE,GAAG,UAASN,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAvD,WC4CKyM,cAhDb,SAAAA,EAAY9M,GAAO,IAAAY,EAAA,OAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAAgM,IACjBlM,EAAApB,OAAAuB,EAAA,EAAAvB,CAAAsB,KAAAtB,OAAAwB,EAAA,EAAAxB,CAAAsN,GAAA7L,KAAAH,KAAMd,KAeR+M,UAAY,WACV1J,SAAST,cAAc,SAASoB,UAAUgJ,OAAO,SAdjDpM,EAAKS,MAAQ,CACX0D,KAAM,GACNkI,SAAS,GALMrM,mFASC,IAAA4H,EAAA1H,KAClBoM,MAAM,0EACLC,KAAK,SAAApI,GAAI,OAAIA,EAAKqI,SAClBD,KAAK,SAAApI,GAAI,OAAIyD,EAAKrH,SAAS,CAAC4D,KAAMA,EAAKsI,WAAYJ,SAAS,MAC5DK,MAAM,SAAAC,GAAK,OAAIjK,QAAQiK,MAAMA,sCA+B9B,OArBIzM,KAAKO,MAAM4L,QACN,aAGLhN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY0B,QAASjB,KAAKiM,WAAW9M,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBACjEJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWG,IAAKgN,IAAM9M,IAAI,cACzCT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAAJ,WAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCAEjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAACsN,EAAD,OACPxN,EAAAC,EAAAC,cAACuN,EAAD,CAAM3I,KAAMjE,KAAKO,MAAM0D,gBAvCjB1C,aCElBsL,IAAS/E,OACN3I,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAesN,SAAUC,gBACxB5N,EAAAC,EAAAC,cAAC2N,EAAD,OAEFzK,SAAS0K,eAAe,SjBqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMf,KAAK,SAAAgB,GACjCA,EAAaC","file":"static/js/main.c0d6e9bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/head2.80873aac.png\";","var map = {\n\t\"./example1.png\": 47,\n\t\"./example10.png\": 48,\n\t\"./example11.png\": 49,\n\t\"./example13.png\": 50,\n\t\"./example14.png\": 51,\n\t\"./example17.png\": 52,\n\t\"./example18.png\": 53,\n\t\"./example19.png\": 54,\n\t\"./example20.png\": 55,\n\t\"./example21.png\": 56,\n\t\"./example22.png\": 57,\n\t\"./example23.png\": 58,\n\t\"./example24.png\": 59,\n\t\"./example33.png\": 60,\n\t\"./example34.png\": 61,\n\t\"./example35.png\": 62,\n\t\"./example6.png\": 63,\n\t\"./example7.png\": 64,\n\t\"./example8.png\": 65,\n\t\"./example9.png\": 66\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46;","module.exports = __webpack_public_path__ + \"static/media/example1.2738fa46.png\";","module.exports = __webpack_public_path__ + \"static/media/example10.880701d0.png\";","module.exports = __webpack_public_path__ + \"static/media/example11.8e0bb9ba.png\";","module.exports = __webpack_public_path__ + \"static/media/example13.3d587e00.png\";","module.exports = __webpack_public_path__ + \"static/media/example14.d5c11037.png\";","module.exports = __webpack_public_path__ + \"static/media/example17.672e715c.png\";","module.exports = __webpack_public_path__ + \"static/media/example18.05d55db9.png\";","module.exports = __webpack_public_path__ + \"static/media/example19.95dd48c5.png\";","module.exports = __webpack_public_path__ + \"static/media/example20.8d922dd2.png\";","module.exports = __webpack_public_path__ + \"static/media/example21.74fb23f3.png\";","module.exports = __webpack_public_path__ + \"static/media/example22.cfdbf501.png\";","module.exports = __webpack_public_path__ + \"static/media/example23.4f8704ee.png\";","module.exports = __webpack_public_path__ + \"static/media/example24.f0459c44.png\";","module.exports = __webpack_public_path__ + \"static/media/example33.9b063faa.png\";","module.exports = __webpack_public_path__ + \"static/media/example34.14b327c8.png\";","module.exports = __webpack_public_path__ + \"static/media/example35.efd11c57.png\";","module.exports = __webpack_public_path__ + \"static/media/example6.c7f7390f.png\";","module.exports = __webpack_public_path__ + \"static/media/example7.270db16b.png\";","module.exports = __webpack_public_path__ + \"static/media/example8.d5af926c.png\";","module.exports = __webpack_public_path__ + \"static/media/example9.c79dfd10.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './Home.scss';\nimport head from './images/head2.png'\nimport { NavLink } from 'react-router-dom';\n\n\nfunction Home (props) {\n    return (\n      <>\n        <h2>Home</h2>\n        <div className='instructions'>\n          <p>Welcome to Reactionary, the flash card app for studying up on your React terminology!  Here you can:</p>\n        </div>\n        <div className='home-layout'>\n          <div className='home-options'>\n            <div className='home-option'>\n              <NavLink className='home-link' to='/play'>\n                <h3 className='home-option-heading'>Play a Game!</h3>\n                <p>Choose from multiple game styles, like entering a guess or choosing a guess from multiple choices.</p>\n              </NavLink>\n            </div>\n            <div className='home-option'>\n              <NavLink className='home-link' to='/mycards'>\n                <h3 className='home-option-heading'>Make Your Own Flash Cards!</h3>\n                <p>Create your very own flash cards that will be included in the Review and Guess Mode games.</p>\n              </NavLink>\n            </div>\n            <div className='home-option'>\n              <NavLink className='home-link' to='/stats'>\n                <h3 className='home-option-heading'>View Your Stats!</h3>\n                <p>See how many games you've played, what your overall top score is, and more.</p>\n              </NavLink>\n            </div>\n            <div className='home-option'>\n              <NavLink className='home-link' to='/links'>\n                <h3 className='home-option-heading'>See Helpful React Resources!</h3>\n                <p>Get links to a variety of great resources for brushing up on your React skills and knowledge.</p>\n              </NavLink>\n            </div>\n          </div>\n          <div className='home-image-area'>\n            <img className='home-image' src={head} alt='flashcards icon' />\n          </div>\n        </div>\n      </>\n    )\n}\n\nexport default Home;\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport './Card.scss';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showExample: false\n    }\n  }\n\n  toggleExample = () => {\n    this.setState({showExample: !this.state.showExample});\n  }\n\n  deleteCard = () => {\n    const id = this.props.cardData.id;\n    this.props.deleteMyCard(id);\n  }\n\n  render() {\n    const substring = this.props.cardData.example ? this.props.cardData.example.substring(0,3) : null;\n    let example;\n\n    if (!this.props.cardData.example) {\n      example = <div><p>No example for this card</p></div>\n    } else if (substring === './i' ) {\n      const url = require(`./images/example${this.props.cardData.id}.png`);\n      example = <img className='example-img' src={url} alt='visual example' />\n    } else if (substring === 'dat') {\n      example = <img className='example-img' src={this.props.cardData.example} alt='visual example' />\n    } else {\n      example = <div><p>{this.props.cardData.example}</p></div>;\n    } \n\n    let popup = this.state.showExample && <div className='popup'>\n        {example}\n        <i className='fas fa-times popup-close-btn' onClick={this.toggleExample}> close</i>\n      </div>;\n \n    let term = this.props.hasTerm ? this.props.cardData.term : 'What am I?';\n    \n    const deleteBtn = this.props.canDelete && <i className='fa fa-trash' onClick={this.deleteCard}></i>\n\n    return (\n      <>\n      {popup}\n        <article className='card'>\n          {deleteBtn}        \n          <div className='card-top'>\n            <h4 className='term-header'>{term}</h4>\n          </div>\n          <div className='card-bottom'>\n            <h4 className='description-header'>Description: </h4>\n            <p className='description'>{this.props.cardData.definition}</p>\n            <p className='example-link' onClick={this.toggleExample}>(View Example)</p>\n          </div>\n          </article>\n        </>\n    )\n  }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport './Guess.scss';\n\nclass Guess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorTxt: '',\n      errorIconClass: '',\n      choices: []\n    }\n  }\n\n  checkAnswer = (e) => {\n    let value = e.target.type === 'button' ? e.target.id\n    : e.target.closest('.guess-entry').querySelector('input').value;\n\n    let correct = e.target.type === 'button' ? value === this.props.answer \n    : this.isSimilarEnough(value);\n\n    if (correct) {\n      this.showResponse('That is correct, nice job!', 'fa-check');\n      this.props.removeCard();\n    } else {\n      this.showResponse('Not quite!  We\\'ll try this one again later.', 'fa-times');\n    }\n    this.getNextTurn(e.target);\n  }\n\n  getNextTurn = () => {\n    setTimeout(() => { \n      this.props.getRandomCard();\n      const textInput = document.querySelector('#term-input');\n      console.log(textInput)\n      if (textInput) textInput.value = '';\n      this.props.updateGuessCount('add');\n    }, 2000);\n  }\n\n  isSimilarEnough = (value) => {\n    const check = require('string-similarity');\n    const similarity = check.compareTwoStrings(value.toLowerCase(), this.props.answer.toLowerCase());\n    return similarity >= .72;\n  }\n\n  showResponse = (text, icon) => {\n    const response = document.querySelector('.guess-response');\n    this.setState({errorTxt: text, errorIconClass: icon}, () => {\n      response.classList.remove('invisible');\n      setTimeout(() => response.classList.add('invisible'), 2000)\n    })\n  }\n\n  onGuessKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.checkAnswer(e);\n    }\n  }\n\n  render() {\n    let iconClass = `fas ${this.state.errorIconClass}`;\n    let guessLayout;\n    console.log(this.props.choices);\n    console.log(this.props.answer)\n\n    this.props.mode === 'Guess' ? guessLayout =  (\n      <><label htmlFor='term-input'>Enter your guess:</label>\n        <div className='guess-entry'>\n          <input id='term-input' className='single-guess-input' autoComplete='off' onKeyPress={this.onGuessKeyPress}></input>\n          <button type='button' className='single-guess-btn' onClick={this.checkAnswer}><i className='fas fa-arrow-right'></i></button>\n        </div>\n        <div className='guess-response correct-guess-response'>\n          <i className={iconClass}></i><p>{this.state.errorTxt}</p>\n        </div>\n      </> )\n    : guessLayout = (\n      <><label>Choose a term:</label>\n        <div className='guess-choices'>\n          <button type='button' className='choice' id={this.props.choices[0]} onClick={this.checkAnswer}>{this.props.choices[0]}</button>\n          <button type='button' className='choice' id={this.props.choices[1]} onClick={this.checkAnswer}>{this.props.choices[1]}</button>\n          <button type='button' className='choice' id={this.props.choices[2]} onClick={this.checkAnswer}>{this.props.answer}</button>\n        </div>\n        <div className='guess-response correct-guess-response'>\n          <i className={iconClass}></i><p>{this.state.errorTxt}</p>\n        </div>\n      </> )\n\n    return (\n      <article className='guess-area'>\n        {guessLayout}\n      </article>\n    )\n  }\n}\n\nexport default Guess;","import React, { Component } from 'react';\nimport './CardArea.scss';\nimport Card from './Card.js';\nimport Guess from './Guess.js';\n\n\nclass CardArea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cards: [],\n      remainingCardIds: [],\n      randomCard: {},\n      choices: ['one', 'two', 'three'],\n      hasTerm: this.props.mode !== 'Guess' && this.props.mode !== 'Choice',\n      showDialog: false\n    }\n  }\n\n  componentDidMount() {\n    this.getCards();\n  }\n\n  getCards = () => {\n    const appCards = this.props.data;\n    const myCards = this.props.myCards || [];\n    const combo = appCards.concat(myCards);\n    const ids = combo.map(card => card.id);\n    const remaining = JSON.parse(localStorage.getItem('remaining cards')) \n    || ids;\n    this.setState({cards: combo, remainingCardIds: remaining}, () => {\n      this.getRandomCard();\n    })\n  }\n\n  getRandomCard = () => {\n    const randomId = this.state.remainingCardIds[Math.floor(Math.random() * this.state.remainingCardIds.length)];\n    const randomCard = this.state.cards.find(card => card.id === randomId);\n    console.log(randomCard)\n    this.setState({randomCard: randomCard, choices: randomCard.fakeAnswers.concat(randomCard.term)});\n  }\n\n  removeCard = () => {\n    let updatedIds = [...this.state.remainingCardIds];\n    updatedIds.splice(updatedIds.indexOf(this.state.randomCard.id), 1);\n    if (!updatedIds.length) {\n      setTimeout(() => this.endGame(), 2000);\n    }\n    this.updateRemainingCardIds(updatedIds);\n  }\n\n  updateRemainingCardIds = (ids) => {\n    this.setState({remainingCardIds: ids});\n    localStorage.setItem('remaining cards', JSON.stringify(ids));\n  }\n\n  resetGame = () => {\n    this.updateRemainingCardIds(this.state.cards.map(card => card.id));\n    this.props.updateGuessCount(0);\n    this.getCards();\n  }\n\n  endGame = () => {\n    this.props.updateGameCount();\n    this.props.checkHighScore(this.state.cards.length);\n    this.setState({showDialog: true});\n    this.resetGame();\n  }\n\n  closeDialog = () => {\n    this.setState({showDialog: false});\n  }\n\n  shuffle = array => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  render() {\n    console.log(this.state.remainingCardIds)\n    const totalCards = this.state.cards.length;\n    const cardsLeft = this.state.remainingCardIds.length;\n    let guess;\n    let percent = (totalCards - cardsLeft) / totalCards * 100;\n    if (percent === 100) {\n      percent = 99.99;\n    }\n    const style = {animationDelay: `-${percent}s`};\n\n      guess = \n       <Guess mode={this.props.mode} \n             answer={this.state.randomCard.term} \n             choices={this.state.choices}\n             getRandomCard={this.getRandomCard} \n             removeCard={this.removeCard}\n             updateGuessCount={this.props.updateGuessCount}\n       /> \n\n    const dialog = this.state.showDialog && \n      <div className='popup'>\n        <div className='round-end-dialog' onBlur={this.closeDialog}>\n          <h2>Congratulations!</h2>\n          <p>You have answered all flash cards.  The game has reset so you can replay any time you feel like brushing up!</p>\n          <button type='button' onClick={this.closeDialog}>OK</button>\n        </div>\n      </div>;\n\n      const card = this.state.randomCard && \n        <Card hasTerm={this.state.hasTerm} \n              canDelete={false} \n              cardData={this.state.randomCard}\n        />\n\n    return (\n      <section className='card-area'>\n        {dialog}\n        {card}\n        {guess}\n        <article className='progress-area'>\n          <p><span>{totalCards - cardsLeft}</span> of <span>{totalCards}</span></p>\n          <div className='progress-chart' style={style}></div>\n        </article>\n      </section>\n    )\n  }\n}\n\nexport default CardArea;","import React from 'react';\nimport './GuessMode.scss';\nimport CardArea from './CardArea.js';\n\nfunction GuessMode(props) {\n    return (\n      <>\n        <h3>Guess Mode</h3>\n        <div className='instructions'>\n          <p>Read the description below, and enter the term you think this describes. View the example if you'd like some extra help!</p>\n        </div>\n        <CardArea mode='Guess'\n                  data={props.data}\n                  myCards={props.myCards}\n                  markCardUsed={props.markCardUsed}\n                  updateGameCount={props.updateGameCount}\n                  updateGuessCount={props.updateGuessCount}\n                  checkHighScore={props.checkHighScore}\n        />\n      </>\n    )\n}\n\nexport default GuessMode;\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport './MyCardList.scss';\nimport Card from './Card.js';\n\nfunction MyCardList(props) {\n  let list;\n  props.mode === 'All' ? list = props.data.concat(props.myCards) \n  : list = props.myCards;\n  \n    return (\n      <>\n        {\n          list.map(card => {\n            return <Card key={card.id}\n                         hasTerm={true} \n                         canDelete={props.canDelete} \n                         cardData={card}\n                         deleteMyCard={props.deleteMyCard}\n                   />\n          })\n        }\n      </>\n    )\n}\n\nexport default MyCardList;","import React from 'react';\nimport './GuessMode.scss';\nimport MyCardList from './MyCardList.js';\n\nfunction ReviewMode(props) {\n    return (\n      <>\n        <h3>Review Mode</h3>\n        <div className='instructions'>\n          <p>Here are all the cards that you'll be shown when playing the other modes.  Use this mode to brush up on your skills, and then try your hand at the Guess and Choice modes!</p>\n        </div>\n        <div className='my-card-list'>\n          <MyCardList mode='All'\n                      data={props.data}\n                      myCards={props.myCards}\n                      canDelete={false}\n          />\n        </div>\n      </>\n    )\n}\n\nexport default ReviewMode;\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport CardArea from './CardArea.js';\n\nfunction ChoiceMode(props) {\n    return (\n      <>\n        <h3>Choice Mode</h3>\n        <div className='instructions'>\n          <p>Read the description below, and click on the term to the right that you think this describes. View the example if you'd like some extra help!</p>\n        </div>\n        <CardArea mode='Choice'\n                  data={props.data}\n                  markCardUsed={props.markCardUsed}\n                  updateGameCount={props.updateGameCount}\n                  updateGuessCount={props.updateGuessCount}\n                  checkHighScore={props.checkHighScore}\n        />\n      </>\n    )\n}\n\nexport default ChoiceMode;\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport './Play.scss';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport GuessMode from './GuessMode.js';\nimport ReviewMode from './ReviewMode.js';\nimport ChoiceMode from './ChoiceMode.js';\n\nclass Play extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2>Play</h2>\n        <Switch>\n          <Route path='/play' exact render={(props) => (\n            <>\n              <p className='instructions'>Choose from multiple game styles, like entering a guess or choosing a guess from multiple choices.</p>\n              <div className='home-option'>\n                <NavLink className='home-link' to='/play/guess'>\n                  <h3 className='home-option-heading'>Guess Mode</h3>\n                  <p>In this mode, you are shown definitions of React terms with an optional example for extra help, and you type what you think the term is.</p>\n                </NavLink>\n              </div>\n              <div className='home-option'>\n                <NavLink className='home-link' to='/play/choice'>\n                  <h3 className='home-option-heading'>Choice Mode</h3>\n                  <p>In this mode, you are shown definitions of React terms with an optional example for extra help, and you click one of three multiple choices that you think it describes.</p>\n                </NavLink>\n              </div>\n              <div className='home-option'>\n                <NavLink className='home-link' to='/play/review'>\n                  <h3 className='home-option-heading'>Review Mode</h3>\n                  <p>In this mode, you can go through all available cards in the app to brush up on your skills in preparation for the Choice and Guess mode games!</p>\n                </NavLink>\n              </div>\n            </>\n           )} />\n            <Route path='/play/guess' exact render={(props) => (<GuessMode\n                    data={this.props.data} \n                    myCards={this.props.myCards}\n                    updateGameCount={this.props.updateGameCount}\n                    markCardUsed={this.props.markCardUsed}\n                    checkHighScore={this.props.checkHighScore}\n                    updateGuessCount={this.props.updateGuessCount}\n            />)}\n            />\n            <Route path='/play/choice' exact render={(props) => (<ChoiceMode\n                    data={this.props.data} \n                    myCards={this.props.myCards}\n                    updateGameCount={this.props.updateGameCount}\n                    markCardUsed={this.props.markCardUsed}\n                    checkHighScore={this.props.checkHighScore}\n                    updateGuessCount={this.props.updateGuessCount}\n            />)}\n            />\n            <Route path='/play/review' render={(props) => (\n            <ReviewMode data={this.props.data} \n                        myCards={this.props.myCards}\n            />\n          )}/>\n        </Switch>\n      </>\n    )\n  }\n}\n\nexport default Play;\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport './CardForm.scss';\n\nconst validType = file => (/\\.(jpe?g|png|gif)$/i.test(file.name));\n\nclass CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageUrl: ''\n    }\n  }\n\n  saveCard = (e) => {\n    const term = document.querySelector('#my-term-input').value;\n    const desc = document.querySelector('#my-desc-input').value;\n    // const file = document.querySelector('#my-example-input').value;\n    const file = this.state.imageUrl;\n\n    this.props.saveNewCard(term, desc, file);\n    document.querySelectorAll('.new-card-input').forEach(i => i.value = '');\n    this.setState({imageUrl: ''});\n  }\n\n  onFileChange = e => {\n    const reader = new FileReader();\n    if (e.target.files[0] && validType(e.target.files[0])) {\n      reader.readAsDataURL(e.target.files[0]); \n      reader.onload = this.getImageUrl;\n    } \n  }\n\n  getImageUrl = e => {\n    const url = e.target.result;\n    this.setState({imageUrl: url});\n  }\n\n  render() {\n    return (\n      <form className='new-card-form'>\n        <label htmlFor='my-term-input'>Term<span>*</span>:</label>\n        <input type='text' className='new-card-input' id='my-term-input' maxLength='30'></input>\n        <label htmlFor='my-desc-input'>Description<span>*</span>:</label>\n        <textarea className='new-card-input' id='my-desc-input' maxLength='80'></textarea>\n        <label htmlFor='my-desc-input'>Example:</label>\n        <input type='file' className='new-card-input' id='my-example-input' onChange={this.onFileChange}></input>\n        <div className='new-card-form-btns'>\n          <button type='button' className='cancel-card-btn' onClick={this.props.cancelForm}>Cancel</button>\n          <button type='button' className='save-card-btn' onClick={this.saveCard}>Save</button>       \n        </div>\n      </form>\n    )\n  }\n}\n\nexport default CardForm;","import React, { Component } from 'react';\nimport './MyCards.scss';\nimport CardForm from './CardForm.js';\nimport MyCardList from './MyCardList.js';\n\nclass MyCards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showForm: false\n    }\n  }\n\n  toggleForm = () => {\n    const update = !this.state.showForm;\n    this.setState({showForm: update})\n  }\n\n  cancelForm = () => {\n    document.querySelectorAll('.new-card-input').forEach(i => i.value = '');\n    this.setState({showForm: false});\n  }\n\n  render() {\n    const form = this.state.showForm \n    ? <CardForm cancelForm={this.cancelForm} saveNewCard={this.props.saveNewCard} /> \n    : null;\n\n    return (\n      <>\n        <h2>My Cards</h2>\n        <div className='instructions'>\n          <p className='top-line'>Add and delete your own custom flash cards below!</p>\n          <p className='notes'>NOTE: These will be included in the 'Guess Mode' and 'Review Mode' games only.</p>\n        </div>\n        <div className='new-card-link'>\n          <button type='button' id='new-card-btn' onClick={this.toggleForm}>+ Add New Card</button>\n        </div>\n        <div className='my-card-list'>\n          {form}\n          <MyCardList data={this.props.data}\n                      myCards={this.props.myCards} \n                      canDelete={true}\n                      deleteMyCard={this.props.deleteMyCard} \n          />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default MyCards;\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport './Stats.scss';\n\nfunction Stats(props) {\n  return (\n    <>\n      <h2>Stats</h2>\n      <div className='stat'>\n      <i className='fas fa-check-double'></i>\n        <div>\n          <h3 className='stats-heading'>Total Games Completed</h3>\n          <p>You have completed a total of {props.gameCount} games!</p>\n        </div>\n      </div>\n      <div className='stat'>\n        <div><i className='fas fa-trophy'></i></div>\n        <div></div>\n        <div>\n          <h3 className='stats-heading'>High Score</h3>\n          <p>Your best game was answering {props.highScore.totalCards} questions with {props.highScore.guesses} guesses!</p>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Stats;","import React from 'react';\nimport './Links.scss';\n\nfunction Links(props) {\n  return (\n    <>\n      <h2>Links</h2>\n      <h3 className='resources-heading'>React Docs</h3>\n      <p>React has great documentation online with up-to-date information on everything within its framework!</p>\n      <a className='resources-link' href='https://reactjs.org/docs/getting-started.html'>https://reactjs.org/docs/getting-started.html</a>\n      <h3 className='resources-heading'>React Status</h3>\n      <p>A weekly roundup of the latest React and React Native links and tutorials.</p>\n      <a className='resources-link' href='https://react.statuscode.com/'>https://react.statuscode.com/</a>\n      <h3 className='resources-heading'>Other helpful links</h3>\n      <a className='resources-link' href='https://www.udemy.com/react-redux/'>https://www.udemy.com/react-redux/</a>\n      <a className='resources-link' href='https://reactjs.org/docs/introducing-jsx.html'>https://reactjs.org/docs/introducing-jsx.html</a>\n      <a className='resources-link' href='https://css-tricks.com/learning-react-redux/'>https://css-tricks.com/learning-react-redux/</a>\n    </>\n  )\n}\n\nexport default Links;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './Main.scss';\nimport Home from './Home.js';\nimport Play from './Play.js';\nimport MyCards from './MyCards.js';\nimport Stats from './Stats.js';\nimport Links from './Links.js';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      myCards: [],\n      gameCount: 0,\n      totalGuesses: 0,\n      highScore: {totalCards: 0, guesses: 0}\n    }\n  }\n\n  componentDidMount() {\n    const myCards = JSON.parse(localStorage.getItem('my cards')) || [];\n    const gameCount = JSON.parse(localStorage.getItem('game count')) || 0;\n    const highScore = JSON.parse(localStorage.getItem('high score')) || {totalCards: 0, guesses: 0};\n    const totalGuesses = JSON.parse(localStorage.getItem('guess count')) || 0;\n\n    this.setState({\n      myCards: myCards, \n      gameCount: gameCount, \n      highScore: highScore, \n      totalGuesses: totalGuesses\n    });\n  }\n\n  updateGameCount = () => {\n    const gameCount = this.state.gameCount + 1;\n    this.setState({gameCount: gameCount});\n    localStorage.setItem('game count', JSON.stringify(gameCount));\n  }\n\n  updateGuessCount = update => {\n    let total = update === 'add' ? this.state.totalGuesses + 1 : 0;\n    this.setState({totalGuesses: total});\n    localStorage.setItem('guess count', JSON.stringify(total));\n  }\n\n  checkHighScore = (numCards) => {\n    const numGuesses = this.state.totalGuesses;\n    const highDiff =  this.state.highScore.guesses / this.state.highScore.totalCards;\n    const currentDiff = numGuesses / numCards;\n\n    if (!highDiff || currentDiff < highDiff) { \n      const newScore = {totalCards: numCards, guesses: numGuesses};\n      this.setState({highScore: newScore}, () => {\n        localStorage.setItem('high score', JSON.stringify(newScore));\n      });\n    } \n  }\n\n  saveNewCard = (term, desc, file) => {\n    const newCard = {id: Date.now(), term: term, definition: desc, example: file, new: true};\n    const updatedCards = this.state.myCards;\n    updatedCards.unshift(newCard);\n    this.updateMyCards(updatedCards);\n    this.updateStorageRemainingCards(newCard.id, 'add');\n  }\n\n  deleteMyCard = cardId => {\n    const updatedCards = this.state.myCards; \n    const deletedCard = updatedCards.find(card => card.id === cardId);\n    updatedCards.splice(updatedCards.indexOf(deletedCard), 1);\n    this.updateMyCards(updatedCards);\n    this.updateStorageRemainingCards(deletedCard.id);\n  }\n\n  updateMyCards = cards => {\n    this.setState({myCards: cards});\n    localStorage.setItem('my cards', JSON.stringify(cards))\n  }\n\n  updateStorageRemainingCards = (id, option) => {\n    let remaining = JSON.parse(localStorage.getItem('remaining cards')) || [];\n    if (option === 'add') {\n      remaining.push(id);\n    } else if (remaining.includes(id)) {\n      remaining.splice(remaining.indexOf(id), 1);\n    }\n    localStorage.setItem('remaining cards', JSON.stringify(remaining));\n  }\n\n  markCardUsed = cardId => {\n    const updatedCards = [...this.state.myCards];  \n    const index = updatedCards.indexOf(updatedCards.find(card => card.id === cardId));\n    updatedCards[index].new = false;\n    this.updateMyCards(updatedCards);\n  }\n\n  render() {\n    return (\n        <main>\n            <Switch>\n              <Route path='/' exact render={(props) => (<Home />)}/>\n              <Route path='/play' render={(props) => (\n                <Play data={this.props.data} \n                      myCards={this.state.myCards}\n                      updateGameCount={this.updateGameCount}\n                      markCardUsed={this.markCardUsed}\n                      checkHighScore={this.checkHighScore}\n                      updateGuessCount={this.updateGuessCount}\n                />\n              )}/>\n              <Route path='/mycards' render={(props) => (\n                <MyCards data={this.props.data}\n                        myCards={this.state.myCards}\n                        saveNewCard={this.saveNewCard} \n                        deleteMyCard={this.deleteMyCard}\n                />\n              )}/>\n              <Route path='/stats' render={(props) => (\n                <Stats gameCount={this.state.gameCount}\n                      highScore={this.state.highScore}\n                />\n              )}/>\n              <Route path='/links' render={(props) => (<Links />)}/>\n            </Switch>\n        </main>\n    )\n  }\n}\n\nexport default Main;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navigation.scss';\n\nfunction Navigation(props) {\n    return (\n      <nav className='App-navigation'>\n          <NavLink className='nav-link' exact={true} to='/'><i className=\"fas fa-home\"></i>Home</NavLink>\n          <NavLink className='nav-link' to='/play'><i className=\"fas fa-play\"></i>Play</NavLink>\n          <NavLink className='nav-link' to='/mycards'><i className=\"far fa-copy\"></i>My Cards</NavLink>\n          <NavLink className='nav-link' to='/stats'><i className=\"fas fa-chart-pie\"></i>Stats</NavLink>\n          <NavLink className='nav-link' to='/links'><i className=\"fas fa-link\"></i>Links</NavLink>\n      </nav>\n    )\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport Main from './Main.js';\nimport Navigation from './Navigation.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      data: [],\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://fe-apps.herokuapp.com/api/v1/memoize/1901/lynnerang/reactterms')\n    .then(data => data.json())\n    .then(data => this.setState({data: data.reactTerms, loading: false})) \n    .catch(error => console.error(error))\n  }\n\n  toggleNav = () => {\n    document.querySelector('aside').classList.toggle('show');\n  }\n\n  render() {\n    let page;\n\n    if (this.state.loading) {\n      page = 'loading...'\n    } else {\n      page = (\n        <div className='App'>\n          <div className='hamburger' onClick={this.toggleNav}><i className='fas fa-bars'></i></div>\n          <header className='App-header'>\n            <div className='App-header-left'>\n              <img className='App-logo' src={logo} alt='site logo'/>\n              <h1><span>REACT</span>ionary</h1>\n            </div>\n            <div className='App-header App-header-right'></div>\n          </header>\n          <div className='App-content'>\n            <aside><Navigation /></aside>\n            <Main data={this.state.data} />\n          </div>\n        </div>\n      );\n    }\n\n    return page;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  (<BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}